#require 'stylesheet'
#require 'rule'
#require 'property'
#require 'value'

class SSS::Parser
rule
  # Parsing starts here.
  stylesheet:
    rules                             { return StyleSheet.new(val[0]) }

  rules:
    rule                              { return [ val[0] ] }
  | rules rule                        { return val[0].push(val[1]) }

  rule:
    selector '{' properties '}'       { return Rule.new(val[0], val[2]) } 


  selector: 
    IDENTIFIER
  | SELECTOR

  properties:
    /* empty */                       { return [ ] }
  | property                          { return [ val[0] ] }
  | properties ';' property           { return val[0].push(val[2]) }
  | properties ';'                    { return val[0] }

  property:    
    IDENTIFIER ':' values             { return Property.new(val[0], val[2]) } 

  values:
    value                             { return [ val[0] ] }
  | values value                      { return val[0].push(val[1]) }

  value:
    IDENTIFIER
  | COLOR
  | NUMBER
  | DIMENSION
end


---- header ----
#
# generated by racc
#
require_relative 'style_sheet'
require_relative 'rule'
require_relative 'property'
require_relative 'parser.rex'

---- inner ----

---- footer ----

#puts 'sss'
#parser = SSS::Parser.new
#
#while true
#  print '>>> '; $stdout.flush
#  str = $stdin.gets.strip
#  break if /q/i === str
#
#  begin
#    style_sheet = parser.scan_str(str)
#    puts style_sheet.to_s
#  rescue ParseError => e
#    puts e
#    puts 'parse error'
#  end
#end
