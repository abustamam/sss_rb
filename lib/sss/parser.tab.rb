#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.11
# from Racc grammer file "".
#

require 'racc/parser.rb'

require_relative 'style_sheet'
require_relative 'rule'
require_relative 'property'
require_relative 'parser.rex'
module SSS
  class Parser < Racc::Parser

module_eval(<<'...end parser.racc/module_eval...', 'parser.racc', 58)

...end parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
    23,    13,     6,    23,    24,    25,    26,    24,    25,    26,
    17,     5,     6,    18,    13,     6,    13,     6,     5,     6,
    19,     9,     7,    10 ]

racc_action_check = [
    21,    11,    11,    19,    21,    21,    21,    19,    19,    19,
    12,     0,     0,    12,     9,     9,    18,    18,     2,     2,
    13,     4,     1,     7 ]

racc_action_pointer = [
     7,    22,    14,   nil,    19,   nil,   nil,    23,   nil,    10,
   nil,    -3,     7,    13,   nil,   nil,   nil,   nil,    12,    -1,
   nil,    -4,   nil,   nil,   nil,   nil,   nil,   nil ]

racc_action_default = [
   -21,   -21,    -1,    -2,   -21,    -5,    -6,   -21,    -3,    -7,
    28,   -12,   -21,    -5,    -8,   -11,   -13,    -4,   -10,   -21,
    -9,   -14,   -15,   -17,   -18,   -19,   -20,   -16 ]

racc_goto_table = [
    14,     8,    22,    12,    27,     2,    16,    21,     1,    20,
     8 ]

racc_goto_check = [
     6,     3,     9,     5,     9,     2,     7,     8,     1,     6,
     3 ]

racc_goto_pointer = [
   nil,     8,     5,    -1,   nil,    -6,    -9,    -5,   -12,   -17 ]

racc_goto_default = [
   nil,   nil,    11,     3,     4,   nil,   nil,    15,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 12, :_reduce_1,
  1, 13, :_reduce_2,
  2, 13, :_reduce_3,
  4, 14, :_reduce_4,
  1, 15, :_reduce_none,
  1, 15, :_reduce_none,
  0, 16, :_reduce_7,
  1, 16, :_reduce_8,
  3, 16, :_reduce_9,
  2, 16, :_reduce_10,
  1, 17, :_reduce_11,
  1, 17, :_reduce_none,
  2, 17, :_reduce_13,
  3, 18, :_reduce_14,
  1, 19, :_reduce_15,
  2, 19, :_reduce_16,
  1, 20, :_reduce_none,
  1, 20, :_reduce_none,
  1, 20, :_reduce_none,
  1, 20, :_reduce_none ]

racc_reduce_n = 21

racc_shift_n = 28

racc_token_table = {
  false => 0,
  :error => 1,
  "{" => 2,
  "}" => 3,
  :IDENTIFIER => 4,
  :SELECTOR => 5,
  ";" => 6,
  ":" => 7,
  :COLOR => 8,
  :NUMBER => 9,
  :DIMENSION => 10 }

racc_nt_base = 11

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"{\"",
  "\"}\"",
  "IDENTIFIER",
  "SELECTOR",
  "\";\"",
  "\":\"",
  "COLOR",
  "NUMBER",
  "DIMENSION",
  "$start",
  "stylesheet",
  "rules",
  "rule",
  "selector",
  "declarations",
  "declarationGroup",
  "property",
  "values",
  "value" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parser.racc', 14)
  def _reduce_1(val, _values, result)
     return StyleSheet.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 17)
  def _reduce_2(val, _values, result)
     return [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 18)
  def _reduce_3(val, _values, result)
     return val[0].push(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 21)
  def _reduce_4(val, _values, result)
     return Rule.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 5 omitted

# reduce 6 omitted

module_eval(<<'.,.,', 'parser.racc', 28)
  def _reduce_7(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 29)
  def _reduce_8(val, _values, result)
     return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 30)
  def _reduce_9(val, _values, result)
     return val[0] + val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 31)
  def _reduce_10(val, _values, result)
     return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 34)
  def _reduce_11(val, _values, result)
     return [val[0]] 
    result
  end
.,.,

# reduce 12 omitted

module_eval(<<'.,.,', 'parser.racc', 36)
  def _reduce_13(val, _values, result)
     return val[0].push(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 39)
  def _reduce_14(val, _values, result)
     return Property.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 42)
  def _reduce_15(val, _values, result)
     return [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 43)
  def _reduce_16(val, _values, result)
     return val[0].push(val[1]) 
    result
  end
.,.,

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

# reduce 20 omitted

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module SSS


